bd_test_data$rf_no_bd <- predict(rf_no_bd, bd_test_data)
bd_test_data %>% mutate(S_M1 = log_kfs - rf_no_bd) -> bd_test_data
cor(bd_test_data$rf_no_bd, bd_test_data$log_kfs, method = c("spearman"))
slr_rf_np_bd <- lm(bd_test_data$log_kfs ~ bd_test_data$rf_no_bd)
tibble(inter = summary(slr_rf_np_bd)$coefficients[1,1] %>% round(3),
slope = summary(slr_rf_np_bd)$coefficients[2,1] %>% round(3),
r2 = summary(slr_rf_np_bd)$adj.r.squared %>% round(2),
E = sum(bd_test_data$S_M1) / length(bd_test_data$S_M1) %>% round(3), #E
RMSE = (sum(bd_test_data$S_M1^2)/length(bd_test_data$S_M1))^0.5 %>% round(3),
d = (1- sum(bd_test_data$S_M1^2)/sum((abs(bd_test_data$log_kfs-mean(bd_test_data$rf_no_bd))+
abs(bd_test_data$rf_no_bd-mean(bd_test_data$rf_no_bd)))^2)) %>% round(3)
)
## sscbd: with no scaled ssc
rf_wt_bd <- randomForest(log_kfs ~ Percent_Sand + Percent_Clay + Percent_Silt + BulkDensity_gcm3, data=bd_test_data,
ntree = 100,
mtry = 2,
importance = TRUE,
proximity = TRUE)
## train dataset
bd_test_data$rf_wt_bd <- predict(rf_wt_bd, bd_test_data)
cor(bd_test_data$rf_wt_bd, bd_test_data$log_kfs, method = c("spearman"))
bd_test_data %>% mutate(S_M3 = log_kfs - rf_wt_bd) -> bd_test_data
slr_rf_wt_bd <- lm(bd_test_data$log_kfs ~ bd_test_data$rf_wt_bd)
tibble(inter = summary(slr_rf_wt_bd)$coefficients[1,1] %>% round(3),
slope = summary(slr_rf_wt_bd)$coefficients[2,1] %>% round(3),
r2 = summary(slr_rf_wt_bd)$adj.r.squared %>% round(2),
E = sum(bd_test_data$S_M3) / length(bd_test_data$S_M3) %>% round(3), #E
RMSE = (sum(bd_test_data$S_M3^2)/length(bd_test_data$S_M3))^0.5 %>% round(3),
d = (1- sum(bd_test_data$S_M3^2)/sum((abs(bd_test_data$log_kfs-mean(bd_test_data$rf_wt_bd))+
abs(bd_test_data$rf_wt_bd-mean(bd_test_data$rf_wt_bd)))^2)) %>% round(3)
)
## ssc: with no scaled ssc, ann model
ann_no_bd <- neuralnet(log_kfs ~ Percent_Sand + Percent_Silt + Percent_Clay,
data=bd_test_data, hidden=c(5,3), linear.output=T, stepmax=1e6)
## train dataset
bd_test_data$ann_no_bd <- neuralnet::compute(ann_no_bd, bd_test_data[,c('Percent_Sand' , 'Percent_Silt' , 'Percent_Clay')])$net.result
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
View(PTFvsROSETTA)
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank())
PTFvsROSETTA %>%
dplyr::select(Group, Kfs)
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs)
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free")
# response to review
library(ggridges)
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1)
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(kfs = log(kfs))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank())
# compare PTF of this study with ROSETTA
PTFvsROSETTA <- read.csv(here::here("vignettes/PTFs-vs-ROSETTA.csv"))
PTFvsROSETTA %>%
dplyr::select(Group, Kfs) %>%
mutate(Kfs = log(Kfs)) %>%
ggplot(aes(Kfs, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
xlab(expression(K[fs]~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("(e) ROSETTA", "(d) RF-with-structure-no-rock", "(c) RF-no-structure-no-rock", "(b) ANN-no-structure-no-rock", "(a) Measured"))
library(ggmap)
library(maps)
library(mapdata)
library(forcats)
library(tidyr)
library(modelr)
library(purrr)
library(ggplot2)
library(cowplot)
library(urbankfs)
library(readxl)
# install.packages("here")
# install.packages("randomForest")
library(devtools)
requireNamespace("here", quietly = TRUE)
# devtools::install(here::here())
requireNamespace("randomForest", quietly = TRUE)
library(dplyr)
library(ncdf4)
knitr::opts_chunk$set(results = 'hide', message = TRUE, include = TRUE,
echo = FALSE, warning = FALSE,
# fig.height = 4, fig.width = 8,
cache = F)
histdata <- read.csv(here::here("extdata/UrbanSoilK_V3.csv")) %>%
as_tibble() %>%
mutate(Top_Type = factor(Top_Type, soil_type_levels())) %>%
normalize_soil_pct_data(add_rock = FALSE)
histdata$Top_Type <- as.character(histdata$Top_Type)
histdata$Top_Type <- ifelse(is.na(histdata$Top_Type), "SG", histdata$Top_Type)
# prepare data
site <- read.csv("All_SSURGO_and_Point.csv")
kfsdata <- read.csv("All_SSURGO_and_Surface_HC.csv")
left_join(site %>% select(SampleSite_ID,SamplePoint_ID, Longitude, Latitude),
kfsdata %>% select(SampleSite_ID,SamplePoint_ID, Unsaturated_K2cm_cmhr) %>%
filter(!is.na(Unsaturated_K2cm_cmhr))) %>%
filter(!is.na(Unsaturated_K2cm_cmhr)) -> kfs_site
kfs_site %>% select(Latitude, Longitude) %>%
filter(Longitude < 0) %>%
unique() -> kfs_site_agg
# plot
theme_set(theme_bw())
map_data("world") %>% select(region) %>% unique()
USA <- map_data("state")
PuertoRico <- map_data("world", region = c("Puerto Rico"), exact = FALSE)
northAmer <- bind_rows(USA, PuertoRico)
northAmer <- northAmer %>% filter(long < 0)
northAmer %>% filter(!(subregion %in% c("Hawaii","Alaska"))) -> northAmer
ggplot(data = northAmer) +
geom_polygon(aes(x = long, y = lat, group=group), fill = "gray", color = "white") +
geom_point(aes(x = Longitude, y = Latitude), shape = 3, color = "blue", size = 2
, data = kfs_site_agg) +
geom_point(aes(x = Longitude, y = Latitude), shape = 1, col = "red", data = histdata) +
labs(x = "Longitude", y = "Latitude")
# ggsave("Figure1-1 Sites.jpg", width = 8, height = 5, units = "in")
# download_jian_fits(here::here("extdata/fitted_models.rda"))
load(here::here("extdata", "fitted_models.rda"))
# load("extdata/fitted_models.rda")
model_rock_type <- tribble(
~model_type, ~use_rock, ~top_type,
"ann", FALSE, FALSE,
"annr", TRUE, FALSE,
"rf1", FALSE, FALSE,
"rf1r", TRUE, FALSE,
"rf2", FALSE, TRUE,
"rf2r", TRUE, TRUE
)
pred <- fitted_models %>%
select(sample, train_data, test_data, model_type, model_fit) %>%
gather(data_type, data, train_data, test_data) %>%
left_join(model_rock_type, by = "model_type") %>%
mutate(
# Subset the data so that it first the needs of the model
data_prep = pmap(list(data, use_rock, top_type), prepare_data), #1
# Actually run the predictions
predicted_log = map2(model_fit, data_prep, predict), #2
# Un-log the predictions
predicted = purrr::map(predicted_log, exp), #3
# Make the model_type labels plot-ready
model_type = fct_recode(model_type, !!!pretty_model_types()) #4
)
# head(pred)
fitted_models_norock <- fitted_models %>%
left_join(model_rock_type, "model_type") %>%
filter(!use_rock)
# NOTE: The `predicted` column here is `log(Kfs)`!
hist_predict <- predict_bootstrap(histdata, fitted_models_norock)
hist_summary <- summary(hist_predict)
# hist_summary <- hist_predict %>%
#   unnest(data, predicted) %>%
#   group_by(model_type, Percent_Sand, Percent_Silt, Percent_Clay, Top_Type) %>%
#   summarize_at(vars(predicted), list(
#     mean = mean,
#     sd = sd,
#     lo = ~quantile(., 0.1),
#     hi = ~quantile(., 0.9),
#     n = length
#   ))
hist_summary
facet_title = c("(a) ANN-no-structure-no-rock" = "Neural network (no rock)",
"(b) RF-no-structure-no-rock" = "RandomForest (no rock, no type)",
"(c) RF-with-structure-no-rock" = "RandomForest (no rock, with type)",
"(d) ROSETTA" = "ROSETTA")
bind_rows(
histdata %>%
transmute(
mean = log(Ksat_Rosseta),
log_Ksat = log(Ksat),
q050 = log_Ksat,
q950 = log_Ksat,
model_type = "ROSETTA") %>%
filter_if(is.numeric, all_vars(is.finite(.))),
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
mutate(log_Ksat = log(Ksat)) %>%
select(mean, log_Ksat, q050, q950, model_type)
) %>%
mutate(model_type = fct_recode(model_type, !!!facet_title)) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = log_Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue", alpha = 0.5, lwd = 0.5, fill = "lightblue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# labeller = as_labeller(facet_title)
) +
labs(x = expression(Predicted ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1})),
y = expression(Observed ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p2
print(p2)
# ggsave("Figure3.jpg", width = 4, height = 6, dpi = 300, units = "in")
# ggsave("Figure3.pdf", width = 4, height = 6, dpi = 300, units = "in")
facet_title = c("(a) ANN-no-structure-no-rock" = "Neural network (no rock)",
"(b) RF-no-structure-no-rock" = "RandomForest (no rock, no type)",
"(c) RF-with-structure-no-rock" = "RandomForest (no rock, with type)")
bind_rows(
histdata %>%
transmute(
mean = log(Ksat_Rosseta),
log_Ksat = log(Ksat),
q050 = log_Ksat,
q950 = log_Ksat,
model_type = "ROSETTA") %>%
filter_if(is.numeric, all_vars(is.finite(.))),
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
mutate(log_Ksat = log(Ksat)) %>%
select(mean, log_Ksat, q050, q950, model_type)
) %>%
mutate(model_type = fct_recode(model_type, !!!facet_title)) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = log_Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue", alpha = 0.5, lwd = 0.5, fill = "lightblue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# labeller = as_labeller(facet_title)
) +
labs(x = expression(Predicted ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1})),
y = expression(Observed ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p2
print(p2)
# ggsave("Figure3.jpg", width = 4, height = 6, dpi = 300, units = "in")
# ggsave("Figure3.pdf", width = 4, height = 6, dpi = 300, units = "in")
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
mutate(log_Ksat = log(Ksat)) %>%
select(mean, log_Ksat, q050, q950, model_type) %>%
mutate(model_type = fct_recode(model_type, !!!facet_title)) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = log_Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue", alpha = 0.5, lwd = 0.5, fill = "lightblue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# labeller = as_labeller(facet_title)
) +
labs(x = expression(Predicted ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1})),
y = expression(Observed ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p2
print(p2)
facet_title = c("(a) ANN-no-structure-no-rock" = "Neural network (no rock)",
"(b) RF-no-structure-no-rock" = "RandomForest (no rock, no type)",
"(c) RF-with-structure-no-rock" = "RandomForest (no rock, with type)")
# bind_rows(
#   histdata %>%
#     transmute(
#       mean = log(Ksat_Rosseta),
#       log_Ksat = log(Ksat),
#       q050 = log_Ksat,
#       q950 = log_Ksat,
#       model_type = "ROSETTA") %>%
#     filter_if(is.numeric, all_vars(is.finite(.))),
#   histdata %>%
#     left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
#     mutate(log_Ksat = log(Ksat)) %>%
#     select(mean, log_Ksat, q050, q950, model_type))
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
mutate(log_Ksat = log(Ksat)) %>%
select(mean, log_Ksat, q050, q950, model_type) %>%
mutate(model_type = fct_recode(model_type, !!!facet_title)) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = log_Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue", alpha = 0.5, lwd = 0.5, fill = "lightblue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# labeller = as_labeller(facet_title)
) +
labs(x = expression(Predicted ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1})),
y = expression(Observed ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p2
print(p2)
# ggsave("Figure3.jpg", width = 4, height = 6, dpi = 300, units = "in")
# ggsave("Figure3.pdf", width = 4, height = 6, dpi = 300, units = "in")
facet_title = c("(a) ANN-no-structure-no-rock" = "Neural network (no rock)",
"(b) RF-no-structure-no-rock" = "RandomForest (no rock, no type)",
"(c) RF-with-structure-no-rock" = "RandomForest (no rock, with type)")
# bind_rows(
#   histdata %>%
#     transmute(
#       mean = log(Ksat_Rosseta),
#       log_Ksat = log(Ksat),
#       q050 = log_Ksat,
#       q950 = log_Ksat,
#       model_type = "ROSETTA") %>%
#     filter_if(is.numeric, all_vars(is.finite(.))),
#   histdata %>%
#     left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
#     mutate(log_Ksat = log(Ksat)) %>%
#     select(mean, log_Ksat, q050, q950, model_type))
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay", "Top_Type")) %>%
mutate(log_Ksat = log(Ksat)) %>%
select(mean, log_Ksat, q050, q950, model_type) %>%
mutate(model_type = fct_recode(model_type, !!!facet_title)) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = log_Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue", alpha = 0.5, lwd = 0.5, fill = "lightblue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# labeller = as_labeller(facet_title)
) +
labs(x = expression(Predicted ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1})),
y = expression(Observed ~ K[fs]*"," ~ log ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p2
print(p2)
# ggsave("Figure3.jpg", width = 4, height = 6, dpi = 300, units = "in")
# ggsave("Figure3.pdf", width = 4, height = 6, dpi = 300, units = "in")
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                                        "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression(R^{2}~"                              "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression("     "~R^{2}~"                              "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
# response to review
library(ggridges)
r2results <- read.csv(here::here("vignettes/r2evaluation.csv"))
r2results %>%
dplyr::select(Group, R2, RMSE) %>%
rename("(a)" = R2, "(b)" = RMSE) %>%
tidyr::gather(-Group, key = "Key", value = "Value") %>%
ggplot(aes(Value, Group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Probability", direction = -1) +
facet_grid(cols = vars(Key), scales = "free") +
xlab(expression("          "~R^{2}~"                              "~RMSE~(cm~hr^{-1}))) +
ylab(element_blank()) +
scale_y_discrete(labels= c("From papers", "This study"))
