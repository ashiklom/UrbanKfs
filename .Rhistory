,"RandomForest (no rock, no type)" = "(b) RF-no-rock-no-structure"
,"RandomForest (with rock, no type)" = "(d) RF-with-rock-no-structure"
,"RandomForest (no rock, with type)" = "(c) RF-no-rock-with-structure"
,"RandomForest (with rock, with type)" = "(f) RF-with-rock-with-structure")
fig_urbandata_cap <- paste0(
"Predicted vs. observed plot for urban data. ",
"Dashed line is the 1:1 fit, and blue line with grey shading is a `observed ~ predicted` linear fit."
)
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay",
"Top_Type")) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
labs(x = expression("Predicted K"[fs] ~ (cm ~ hr^-1)),
y = expression("Observed K"[fs] ~ (cm ~ hr^-1))) +
theme_cowplot() +
coord_cartesian(xlim = c(0, 35))
# ggsave("Figure5.jpg", width = 4, height = 6, dpi = 300, units = "in")
histdata <- read.csv(here::here("extdata/UrbanSoilK_V3.csv")) %>%
as_tibble() %>%
mutate(Top_Type = factor(Top_Type, soil_type_levels())) %>%
normalize_soil_pct_data(add_rock = FALSE)
View(hist_summary)
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-rock", "Neural network (with rock)" = "(b) ANN-with-rock"
,"RandomForest (no rock, no type)" = "(c) RF-no-rock-no-structure"
,"RandomForest (with rock, no type)" = "(d) RF-with-rock-no-structure"
,"RandomForest (no rock, with type)" = "(e) RF-no-rock-with-structure"
,"RandomForest (with rock, with type)" = "(f) RF-with-rock-with-structure")
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
data = pred_summary,
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm,
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm) +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title) ) +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
ggsave("Figure4.jpg", width = 8, height = 8, dpi = 300, units = "in")
pred_summary
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)"))
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
data = pred_summary,
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm,
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm) +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title) ) +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1})))
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
data = pred_summary,
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm,
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm) +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
data = pred_summary,
color = "gray40",
size = 0.5)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm,
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
)
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-rock", "Neural network (with rock)" = "(b) ANN-with-rock"
,"RandomForest (no rock, no type)" = "(c) RF-no-rock-no-structure"
,"RandomForest (with rock, no type)" = "(d) RF-with-rock-no-structure"
,"RandomForest (no rock, with type)" = "(e) RF-no-rock-with-structure"
,"RandomForest (with rock, with type)" = "(f) RF-with-rock-with-structure")
pred_summary %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (with rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
ggsave("Figure4.jpg", width = 4, height = 8, dpi = 300, units = "in")
ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-rock", "Neural network (with rock)" = "(b) ANN-with-rock"
,"RandomForest (no rock, no type)" = "(c) RF-no-rock-no-structure"
,"RandomForest (with rock, no type)" = "(d) RF-with-rock-no-structure"
,"RandomForest (no rock, with type)" = "(e) RF-no-rock-with-structure"
,"RandomForest (with rock, with type)" = "(f) RF-with-rock-with-structure")
pred_summary %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
# , labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
# summary for Table 2
pred_summary$mean <- ifelse(pred_summary$mean < 0, 0.001, pred_summary$mean)
pred_summary %>% mutate(S_M = observed - mean) -> pred_summary
var_modelType <- unique(pred_summary$model_type)
evaluation <- function () {
results <- data.frame()
for (i in 1:length(var_modelType)) {
pred_summary %>% filter(model_type == var_modelType[i]) -> subdata
SLR <- lm(observed ~ mean, data = subdata)
inter <- summary(SLR)$coefficients[1,1] %>% round(3)
slope <- summary(SLR)$coefficients[2,1] %>% round(3)
r2 <- summary(SLR)$adj.r.squared %>% round(3)
# other model evaluation matric
E <- (sum(subdata$S_M) / length(subdata$S_M)) %>% round(3)
d <-  (1- sum(subdata$S_M^2)/sum((abs(subdata$mean-mean(subdata$observed))+abs(subdata$observed-mean(subdata$observed)))^2)) %>% round(3)
# EF <- 1- sum(subdata$S_M^2)/sum((subdata$observed-mean(subdata$observed))^2)
RMSE <- (sum(subdata$S_M^2)/length(subdata$S_M))^0.5 %>% round(3)
p <- t.test(subdata$S_M)$p.value %>% round(3)
results <- rbind(results, data.frame(var_modelType[i], inter, slope, r2, E, d, RMSE, p) )
}
return(results)
}
# getwd()
results <- evaluation()
write.csv(results, "results.csv", row.names = F)
# summary for Table 3
hist_summary$mean <- ifelse(hist_summary$mean < 0, 0.001, hist_summary$mean)
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay",
"Top_Type")) %>% select(Percent_Sand, Percent_Silt, Percent_Clay, Ksat, Ksat_Rosseta, mean, model_type) -> hist_sum
hist_sum %>% mutate(S_M = Ksat - mean) -> hist_sum
var_modelType <- unique(hist_sum$model_type)
evaluation2 <- function () {
results <- data.frame()
for (i in 1:length(var_modelType)) {
hist_sum %>% filter(model_type == var_modelType[i]) -> subdata
SLR <- lm(Ksat ~ mean, data = subdata)
inter <- summary(SLR)$coefficients[1,1] %>% round(3)
slope <- summary(SLR)$coefficients[2,1] %>% round(3)
r2 <- summary(SLR)$adj.r.squared %>% round(3)
# other model evaluation matric
E <- (sum(subdata$S_M) / length(subdata$S_M)) %>% round(3)
d <-  (1- sum(subdata$S_M^2)/sum((abs(subdata$mean-mean(subdata$Ksat))+abs(subdata$Ksat-mean(subdata$Ksat)))^2)) %>% round(3)
# EF <- 1- sum(subdata$S_M^2)/sum((subdata$Ksat-mean(subdata$Ksat))^2)
RMSE <- (sum(subdata$S_M^2)/length(subdata$S_M))^0.5 %>% round(3)
p <- t.test(subdata$S_M)$p.value %>% round(3)
results <- rbind(results, data.frame(var_modelType[i], inter, slope, r2, E, d, RMSE, p) )
}
return(results)
}
# getwd()
results2 <- evaluation2()
write.csv(results2, "results2.csv", row.names = F)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-structure"
,"RandomForest (no rock, no type)" = "(b) RF-no-structure"
,"RandomForest (no rock, with type)" = "(c) RF-with-structure"
)
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-structure"
,"RandomForest (no rock, no type)" = "(b) RF-no-structure"
,"RandomForest (no rock, with type)" = "(c) RF-with-structure"
)
pred_summary %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot()
ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
fig_urbandata_cap <- paste0(
"Predicted vs. observed plot for urban data. ",
"Dashed line is the 1:1 fit, and blue line with grey shading is a `observed ~ predicted` linear fit."
)
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay",
"Top_Type")) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
labs(x = expression("Predicted K"[fs] ~ (cm ~ hr^-1)),
y = expression("Observed K"[fs] ~ (cm ~ hr^-1))) +
theme_cowplot() +
coord_cartesian(xlim = c(0, 35))
# ggsave("Figure5.jpg", width = 4, height = 6, dpi = 300, units = "in")
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-structure"
,"RandomForest (no rock, no type)" = "(b) RF-no-structure"
,"RandomForest (no rock, with type)" = "(c) RF-with-structure"
)
pred_summary %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p1
# evaluation dataset (n=20)
fig_urbandata_cap <- paste0(
"Predicted vs. observed plot for urban data. ",
"Dashed line is the 1:1 fit, and blue line with grey shading is a `observed ~ predicted` linear fit."
)
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay",
"Top_Type")) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
labs(x = expression("Predicted K"[fs] ~ (cm ~ hr^-1)),
y = expression("Observed K"[fs] ~ (cm ~ hr^-1))) +
theme_cowplot() +
coord_cartesian(xlim = c(0, 35)) -> p2
plot_grid(p1, p2)
# ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
fig_regression_cap <- paste0(
"Observed vs. predicted regression for neural network and random forest models. ",
"Dashed line is the 1:1 fit, and blue shaded region is the observed ~ predicted regression."
)
facet_title = c("Neural network (no rock)" = "(a) ANN-no-structure"
,"RandomForest (no rock, no type)" = "(b) RF-no-structure"
,"RandomForest (no rock, with type)" = "(c) RF-with-structure"
)
pred_summary %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) %>%
ggplot() +
aes(x = predicted, y = mean) +
geom_point(aes(y = observed, x = mean),
size = 0.5) +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
geom_errorbarh(aes(y = observed, xmin = lo, xmax = hi, x = NULL),
color = "gray40",
size = 0.5) +
geom_ribbon(
data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")),
aes(ymin = lo, ymax = hi, y = NULL),
alpha = 0.5,
fill = "lightblue"
) +
geom_line(aes(y = mean), data = pred_lm %>% filter(model_type %in% c("Neural network (no rock)", "RandomForest (no rock, no type)", "RandomForest (no rock, with type)")) ) +
geom_abline(linetype = "dashed") +
labs(x = expression('Predicted K'[fs] ~ (cm ~ hr^{-1})),
y = expression('Observed K'[fs] ~ (cm ~ hr^{-1}))) +
theme_cowplot() -> p1
# evaluation dataset (n=20)
facet_title = c("Neural network (no rock)" = "(d) ANN-no-structure"
,"RandomForest (no rock, no type)" = "(e) RF-no-structure"
,"RandomForest (no rock, with type)" = "(f) RF-with-structure"
)
fig_urbandata_cap <- paste0(
"Predicted vs. observed plot for urban data. ",
"Dashed line is the 1:1 fit, and blue line with grey shading is a `observed ~ predicted` linear fit."
)
histdata %>%
left_join(hist_summary, by = c("Percent_Sand", "Percent_Silt", "Percent_Clay",
"Top_Type")) %>%
ggplot() +
aes(x = mean, xmin = q050, xmax = q950, y = Ksat) +
geom_errorbarh(color = "grey50", size = 0.5) +
geom_point(size = 0.7) +
geom_smooth(method = "lm", color = "blue") +
geom_abline(linetype = "dashed") +
facet_wrap(model_type~., ncol = 1
, labeller = as_labeller(facet_title)
) +
labs(x = expression("Predicted K"[fs] ~ (cm ~ hr^-1)),
y = expression("Observed K"[fs] ~ (cm ~ hr^-1))) +
theme_cowplot() +
coord_cartesian(xlim = c(0, 35)) -> p2
plot_grid(p1, p2)
# ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
ggsave("Figure4.jpg", width = 4, height = 6, dpi = 300, units = "in")
ggsave("Figure4.jpg", width = 8, height = 6, dpi = 300, units = "in")
data_orig <- file.path("extdata", "AllCities_Victoria_RDS.csv") %>%
read.csv() %>%
as_tibble()
data_structure <- data_orig %>%
select(Percent_Sand, Percent_Silt, Percent_Clay, Percent_Rock_Fragment,
Unsaturated_K2cm_cmhr, Type) %>%
filter_at(vars(-Percent_Rock_Fragment), negate(is.na)) %>%
mutate(Type = as.character(Type)) %>%
left_join(type_df, by = "Type") %>%
mutate(Top_Type = factor(Top_Type, soil_type_levels()))
type_df <- as_tibble(soil_types())
data_structure <- data_orig %>%
select(Percent_Sand, Percent_Silt, Percent_Clay, Percent_Rock_Fragment,
Unsaturated_K2cm_cmhr, Type) %>%
filter_at(vars(-Percent_Rock_Fragment), negate(is.na)) %>%
mutate(Type = as.character(Type)) %>%
left_join(type_df, by = "Type") %>%
mutate(Top_Type = factor(Top_Type, soil_type_levels()))
